// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Quartz.Features.Calibration.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
    public partial class CAL_ManualCalibrationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CAL - ManualCalibration.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CAL - ManualCalibration", "In order to calibrate an instrument\r\nI want to be able to run calibration using Q" +
                    "uartz", ProgrammingLanguage.CSharp, new string[] {
                        "Obsolete",
                        "ignore",
                        "Calibration"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "CAL - ManualCalibration")))
            {
                Quartz.Features.Calibration.FeatureFiles.CAL_ManualCalibrationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 56
#line 57
testRunner.Given("I have set positive and negative ADC values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Compound",
                        "Reservoir",
                        "Polarity"});
            table1.AddRow(new string[] {
                        "SodiumFormatePos",
                        "C",
                        "Positive"});
            table1.AddRow(new string[] {
                        "SodiumFormateNeg",
                        "C",
                        "Negative"});
            table1.AddRow(new string[] {
                        "SodiumIodidePos",
                        "A",
                        "Positive"});
#line 58
 testRunner.And("a recording has been created of", ((string)(null)), table1, "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-01 - Manual Calibration - Check Recording List")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        public virtual void CAL_01_ManualCalibration_CheckRecordingList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-01 - Manual Calibration - Check Recording List", ((string[])(null)));
#line 64
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 65
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
testRunner.Then("the list of recordings is populated correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CAL_02_ManualCalibration_AcceptDefaultCalibration(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-02 - Manual Calibration - Accept Default Calibration", exampleTags);
#line 68
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 69
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
testRunner.When("I accept the calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
testRunner.Then("the new calibration is applied", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
testRunner.And("the report is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-02 - Manual Calibration - Accept Default Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_02_ManualCalibration_AcceptDefaultCalibration_SodiumFormatePositive()
        {
            this.CAL_02_ManualCalibration_AcceptDefaultCalibration("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-02 - Manual Calibration - Accept Default Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_02_ManualCalibration_AcceptDefaultCalibration_SodiumFormateNegative()
        {
            this.CAL_02_ManualCalibration_AcceptDefaultCalibration("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-02 - Manual Calibration - Accept Default Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_02_ManualCalibration_AcceptDefaultCalibration_SodiumIodidePositive()
        {
            this.CAL_02_ManualCalibration_AcceptDefaultCalibration("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_03_ManualCalibration_RejectDefaultCalibration(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-03 - Manual Calibration - Reject Default Calibration", exampleTags);
#line 83
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 84
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 85
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.When("I reject the calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
testRunner.Then("the original calibration is intact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-03 - Manual Calibration - Reject Default Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_03_ManualCalibration_RejectDefaultCalibration_SodiumFormatePositive()
        {
            this.CAL_03_ManualCalibration_RejectDefaultCalibration("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-03 - Manual Calibration - Reject Default Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_03_ManualCalibration_RejectDefaultCalibration_SodiumFormateNegative()
        {
            this.CAL_03_ManualCalibration_RejectDefaultCalibration("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-03 - Manual Calibration - Reject Default Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_03_ManualCalibration_RejectDefaultCalibration_SodiumIodidePositive()
        {
            this.CAL_03_ManualCalibration_RejectDefaultCalibration("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_04_ManualCalibration_AcceptRandomCalibration(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-04 - Manual Calibration - Accept Random Calibration", exampleTags);
#line 96
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 97
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
testRunner.When("I create a random calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
testRunner.And("I accept the calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
testRunner.Then("the new calibration is applied", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
testRunner.And("the report is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-04 - Manual Calibration - Accept Random Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_04_ManualCalibration_AcceptRandomCalibration_SodiumFormatePositive()
        {
            this.CAL_04_ManualCalibration_AcceptRandomCalibration("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-04 - Manual Calibration - Accept Random Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_04_ManualCalibration_AcceptRandomCalibration_SodiumFormateNegative()
        {
            this.CAL_04_ManualCalibration_AcceptRandomCalibration("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-04 - Manual Calibration - Accept Random Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_04_ManualCalibration_AcceptRandomCalibration_SodiumIodidePositive()
        {
            this.CAL_04_ManualCalibration_AcceptRandomCalibration("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_05_ManualCalibration_RejectRandomCalibration(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-05 - Manual Calibration - Reject Random Calibration", exampleTags);
#line 111
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 112
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.When("I create a random calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
testRunner.And("I reject the calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
testRunner.Then("the original calibration is intact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-05 - Manual Calibration - Reject Random Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_05_ManualCalibration_RejectRandomCalibration_SodiumFormatePositive()
        {
            this.CAL_05_ManualCalibration_RejectRandomCalibration("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-05 - Manual Calibration - Reject Random Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_05_ManualCalibration_RejectRandomCalibration_SodiumFormateNegative()
        {
            this.CAL_05_ManualCalibration_RejectRandomCalibration("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-05 - Manual Calibration - Reject Random Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_05_ManualCalibration_RejectRandomCalibration_SodiumIodidePositive()
        {
            this.CAL_05_ManualCalibration_RejectRandomCalibration("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_06_ManualCalibration_AcceptEmptyCalibration(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-06 - Manual Calibration - Accept Empty Calibration", exampleTags);
#line 125
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 126
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
testRunner.When("I create an empty calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
testRunner.And("I accept the calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
testRunner.Then("the new calibration is applied", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
testRunner.And("the report is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-06 - Manual Calibration - Accept Empty Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_06_ManualCalibration_AcceptEmptyCalibration_SodiumFormatePositive()
        {
            this.CAL_06_ManualCalibration_AcceptEmptyCalibration("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-06 - Manual Calibration - Accept Empty Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_06_ManualCalibration_AcceptEmptyCalibration_SodiumFormateNegative()
        {
            this.CAL_06_ManualCalibration_AcceptEmptyCalibration("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-06 - Manual Calibration - Accept Empty Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_06_ManualCalibration_AcceptEmptyCalibration_SodiumIodidePositive()
        {
            this.CAL_06_ManualCalibration_AcceptEmptyCalibration("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_07_ManualCalibration_RejectEmptyCalibration(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-07 - Manual Calibration - Reject Empty Calibration", exampleTags);
#line 140
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 141
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
testRunner.When("I create an empty calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.And("I reject the calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
testRunner.Then("the original calibration is intact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-07 - Manual Calibration - Reject Empty Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_07_ManualCalibration_RejectEmptyCalibration_SodiumFormatePositive()
        {
            this.CAL_07_ManualCalibration_RejectEmptyCalibration("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-07 - Manual Calibration - Reject Empty Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_07_ManualCalibration_RejectEmptyCalibration_SodiumFormateNegative()
        {
            this.CAL_07_ManualCalibration_RejectEmptyCalibration("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-07 - Manual Calibration - Reject Empty Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_07_ManualCalibration_RejectEmptyCalibration_SodiumIodidePositive()
        {
            this.CAL_07_ManualCalibration_RejectEmptyCalibration("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_08_ManualCalibration_PeakPickerZoomInAndOut(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-08 - Manual Calibration - Peak Picker Zoom In and Out", exampleTags);
#line 154
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 155
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 156
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
testRunner.When("I zoom in and out of the peak picker \'10\' times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
testRunner.Then("the peak picker is updated correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 159
testRunner.And("appropriate zooming messages are received", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-08 - Manual Calibration - Peak Picker Zoom In and Out")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_08_ManualCalibration_PeakPickerZoomInAndOut_SodiumFormatePositive()
        {
            this.CAL_08_ManualCalibration_PeakPickerZoomInAndOut("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-08 - Manual Calibration - Peak Picker Zoom In and Out")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_08_ManualCalibration_PeakPickerZoomInAndOut_SodiumFormateNegative()
        {
            this.CAL_08_ManualCalibration_PeakPickerZoomInAndOut("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-08 - Manual Calibration - Peak Picker Zoom In and Out")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_08_ManualCalibration_PeakPickerZoomInAndOut_SodiumIodidePositive()
        {
            this.CAL_08_ManualCalibration_PeakPickerZoomInAndOut("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_09_ManualCalibration_DefaultReportCreation(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-09 - Manual Calibration - Default Report Creation", exampleTags);
#line 166
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 167
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
testRunner.When("I create a report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
testRunner.Then("the report is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 173
testRunner.And("the charts match the peak picker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-09 - Manual Calibration - Default Report Creation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_09_ManualCalibration_DefaultReportCreation_SodiumFormatePositive()
        {
            this.CAL_09_ManualCalibration_DefaultReportCreation("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-09 - Manual Calibration - Default Report Creation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_09_ManualCalibration_DefaultReportCreation_SodiumFormateNegative()
        {
            this.CAL_09_ManualCalibration_DefaultReportCreation("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-09 - Manual Calibration - Default Report Creation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_09_ManualCalibration_DefaultReportCreation_SodiumIodidePositive()
        {
            this.CAL_09_ManualCalibration_DefaultReportCreation("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
        
        public virtual void CAL_10_ManualCalibration_RandomReportCreation(string reference, string recording, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CAL-10 - Manual Calibration - Random Report Creation", exampleTags);
#line 180
this.ScenarioSetup(scenarioInfo);
#line 56
this.FeatureBackground();
#line 181
testRunner.Given("the calibration tab is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
testRunner.And(string.Format("reference compound {0} is selected", reference), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
testRunner.And(string.Format("sample recording {0} is selected", recording), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
testRunner.And("a calibration has been created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
testRunner.When("I create a random calibration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
testRunner.And("I create a report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
testRunner.Then("the report is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 188
testRunner.And("the charts match the peak picker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-10 - Manual Calibration - Random Report Creation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormatePos")]
        public virtual void CAL_10_ManualCalibration_RandomReportCreation_SodiumFormatePositive()
        {
            this.CAL_10_ManualCalibration_RandomReportCreation("Sodium Formate : Positive", "SodiumFormatePos", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-10 - Manual Calibration - Random Report Creation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Formate : Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumFormateNeg")]
        public virtual void CAL_10_ManualCalibration_RandomReportCreation_SodiumFormateNegative()
        {
            this.CAL_10_ManualCalibration_RandomReportCreation("Sodium Formate : Negative", "SodiumFormateNeg", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CAL-10 - Manual Calibration - Random Report Creation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CAL - ManualCalibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:reference", "Sodium Iodide : Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:recording", "SodiumIodidePos")]
        public virtual void CAL_10_ManualCalibration_RandomReportCreation_SodiumIodidePositive()
        {
            this.CAL_10_ManualCalibration_RandomReportCreation("Sodium Iodide : Positive", "SodiumIodidePos", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
