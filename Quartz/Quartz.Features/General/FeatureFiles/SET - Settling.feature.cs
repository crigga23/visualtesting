// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Quartz.Features.General.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
    public partial class SettlingFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SET - Settling.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Settling", "In order to check that Typhoon Settling works as expected\r\nI want to be able to r" +
                    "un various processes and show that the relevant settling tasks are run\r\nand that" +
                    " where appropriate processes are halted until the settling tasks have completed", ProgrammingLanguage.CSharp, new string[] {
                        "Obsolete",
                        "ignore",
                        "General",
                        "Settling"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Settling")))
            {
                Quartz.Features.General.FeatureFiles.SettlingFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-01 - XML Tag Settle Details")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        public virtual void SET_01_XMLTagSettleDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-01 - XML Tag Settle Details", ((string[])(null)));
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("that the \'InstrumentMonitor.xml\' file is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.When("the contents of the \'InstrumentMonitor.xml\' file are inspected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Settle Name"});
            table1.AddRow(new string[] {
                        "Polarity"});
            table1.AddRow(new string[] {
                        "Tof Voltage"});
            table1.AddRow(new string[] {
                        "Reflectron Voltage"});
            table1.AddRow(new string[] {
                        "Reflectron Grid Voltage"});
            table1.AddRow(new string[] {
                        "Quad Turbo Speed"});
            table1.AddRow(new string[] {
                        "Source Turbo Speed"});
            table1.AddRow(new string[] {
                        "Tof Turbo Speed"});
#line 73
 testRunner.Then("the file will contain tag details for the following", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-02 - Typhoon Start - Settle \'Started\' and \'Finished\' Messages")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        public virtual void SET_02_TyphoonStart_SettleStartedAndFinishedMessages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-02 - Typhoon Start - Settle \'Started\' and \'Finished\' Messages", ((string[])(null)));
#line 85
this.ScenarioSetup(scenarioInfo);
#line 86
 testRunner.Given("all Typhoon Services are \'Stopped\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.When("all Typhoon Services are \'Started\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
  testRunner.And("the Quartz browser is \'Opened\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
  testRunner.And("the instrument is put into \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "DebugView Messages"});
            table2.AddRow(new string[] {
                        "Settle started on: Polarity"});
            table2.AddRow(new string[] {
                        "Settle started on: Tof Voltage"});
            table2.AddRow(new string[] {
                        "Settle started on: Reflectron Grid Voltage"});
            table2.AddRow(new string[] {
                        "Settle started on: Reflectron Voltage"});
            table2.AddRow(new string[] {
                        "Settle started on: Quad Turbo Speed"});
            table2.AddRow(new string[] {
                        "Settle started on: Source Turbo Speed"});
            table2.AddRow(new string[] {
                        "Settle started on: Tof Turbo Speed"});
            table2.AddRow(new string[] {
                        "Settle finished on: Polarity"});
            table2.AddRow(new string[] {
                        "Settle finished on: Tof Voltage"});
            table2.AddRow(new string[] {
                        "Settle finished on: Reflectron Grid Voltage"});
            table2.AddRow(new string[] {
                        "Settle finished on: Reflectron Voltage"});
            table2.AddRow(new string[] {
                        "Settle finished on: Quad Turbo Speed"});
            table2.AddRow(new string[] {
                        "Settle finished on: Source Turbo Speed"});
            table2.AddRow(new string[] {
                        "Settle finished on: Tof Turbo Speed"});
#line 91
 testRunner.Then("after some time DebugView Messages related to InstrumentMonitor will be shown", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-03 - \'Timeout\' Prevents Processes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-SET-03")]
        public virtual void SET_03_TimeoutPreventsProcesses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-03 - \'Timeout\' Prevents Processes", new string[] {
                        "cleanup-SET-03"});
#line 109
this.ScenarioSetup(scenarioInfo);
#line 110
 testRunner.Given("the \"InstrumentMonitor.xml\" file is modified to prevent the FlightTube voltage fr" +
                    "om ever being reached", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
  testRunner.And("all Typhoon Services are \'Restarted\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
  testRunner.And("the Quartz browser is \'Opened\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
  testRunner.And("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
   testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.Then("after \'20\' seconds a DebugView Tof Voltage timeout message is shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Process"});
            table3.AddRow(new string[] {
                        "Acquisition"});
            table3.AddRow(new string[] {
                        "Detector Setup"});
#line 117
  testRunner.And("it is not possible to start the following processes", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SET_04_SwitchingPolarity(string initialPolarity, string newPolarity, string startedSettleMessage, string finishedSettleMessage, string minimumDelay, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-04 - Switching Polarity", exampleTags);
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
  testRunner.And(string.Format("the polarity is {0}", initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.When(string.Format("the polarity is switched to {0}", newPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
 testRunner.Then(string.Format("DebugView {0} and {1} are shown", startedSettleMessage, finishedSettleMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
  testRunner.And(string.Format("there will be a {0} between the settle messages", minimumDelay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-04 - Switching Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_04_SwitchingPolarity_Positive()
        {
            this.SET_04_SwitchingPolarity("Positive", "Negative", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-04 - Switching Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_04_SwitchingPolarity_Negative()
        {
            this.SET_04_SwitchingPolarity("Negative", "Positive", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        public virtual void SET_05_DetectorSetupPre_RunSettlingDelay(string initialPolarity, string runInMode, string startedSettleMessage, string finishedSettleMessage, string minimumDelay, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cleanup-FullReconnect"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-05 - Detector Setup (Pre-Run Settling Delay)", @__tags);
#line 143
this.ScenarioSetup(scenarioInfo);
#line 144
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
  testRunner.And(string.Format("the polarity is {0}", initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.When(string.Format("the Detector Setup process is run in \'{0}\' mode (using LeuEnk Vial)", runInMode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
 testRunner.Then(string.Format("the Detector Setup process will not start, until both Pre-Run DebugView \'{0}\' and" +
                        " \'{1}\' are shown (if appropriate)", startedSettleMessage, finishedSettleMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 152
  testRunner.And(string.Format("there will be a {0} between the settle messages", minimumDelay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-05 - Detector Setup (Pre-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Initial Positive Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Run In Mode", "Positive only")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "N/A (No Delay)")]
        public virtual void SET_05_DetectorSetupPre_RunSettlingDelay_InitialPositivePolarity_Variant0()
        {
            this.SET_05_DetectorSetupPre_RunSettlingDelay("Positive", "Positive only", "N/A (No Message)", "N/A (No Message)", "N/A (No Delay)", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-05 - Detector Setup (Pre-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Initial Positive Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Run In Mode", "Negative only")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_05_DetectorSetupPre_RunSettlingDelay_InitialPositivePolarity_Variant1()
        {
            this.SET_05_DetectorSetupPre_RunSettlingDelay("Positive", "Negative only", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-05 - Detector Setup (Pre-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Initial Positive Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Run In Mode", "Positive and Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "N/A (No Delay)")]
        public virtual void SET_05_DetectorSetupPre_RunSettlingDelay_InitialPositivePolarity_Variant2()
        {
            this.SET_05_DetectorSetupPre_RunSettlingDelay("Positive", "Positive and Negative", "N/A (No Message)", "N/A (No Message)", "N/A (No Delay)", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-05 - Detector Setup (Pre-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Initial Negative Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Run In Mode", "Negative only")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "N/A (No Delay)")]
        public virtual void SET_05_DetectorSetupPre_RunSettlingDelay_InitialNegativePolarity_Variant0()
        {
            this.SET_05_DetectorSetupPre_RunSettlingDelay("Negative", "Negative only", "N/A (No Message)", "N/A (No Message)", "N/A (No Delay)", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-05 - Detector Setup (Pre-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Initial Negative Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Run In Mode", "Positive only")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_05_DetectorSetupPre_RunSettlingDelay_InitialNegativePolarity_Variant1()
        {
            this.SET_05_DetectorSetupPre_RunSettlingDelay("Negative", "Positive only", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-05 - Detector Setup (Pre-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Initial Negative Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Run In Mode", "Positive and Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_05_DetectorSetupPre_RunSettlingDelay_InitialNegativePolarity_Variant2()
        {
            this.SET_05_DetectorSetupPre_RunSettlingDelay("Negative", "Positive and Negative", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        public virtual void SET_06_DetectorSetupMid_RunSettlingDelay(string initialPolarity, string startedSettleMessage, string finishedSettleMessage, string minimumDelay, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cleanup-FullReconnect"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-06 - Detector Setup (Mid-Run Settling Delay)", @__tags);
#line 168
this.ScenarioSetup(scenarioInfo);
#line 169
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 170
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
  testRunner.And(string.Format("the polarity is {0}", initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.When("the Detector Setup process is run in \'Positive and Negative\' mode and positive ha" +
                    "s completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
 testRunner.Then(string.Format("the Negative Detector Setup process will not start, until both Mid-Run DebugView " +
                        "\'{0}\' and \'{1}\' are shown", startedSettleMessage, finishedSettleMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 176
  testRunner.And(string.Format("there will be a {0} between the settle messages", minimumDelay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-06 - Detector Setup (Mid-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_06_DetectorSetupMid_RunSettlingDelay_Positive()
        {
            this.SET_06_DetectorSetupMid_RunSettlingDelay("Positive", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-06 - Detector Setup (Mid-Run Settling Delay)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_06_DetectorSetupMid_RunSettlingDelay_Negative()
        {
            this.SET_06_DetectorSetupMid_RunSettlingDelay("Negative", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        public virtual void SET_07_ManualCalibration(string calibrationPolarity, string calibrationMode, string initialPolarity, string initialMode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cleanup-SET-07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-07 - Manual Calibration", @__tags);
#line 186
this.ScenarioSetup(scenarioInfo);
#line 187
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
  testRunner.And(string.Format("the mode is {0} and the polarity is {1}", initialMode, initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
  testRunner.And("a few seconds of data is Acquired", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.When(string.Format("the mode is {0} and the polarity is {1}", initialMode, initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 192
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
  testRunner.And("a Manual Calibration is Created using the Acquired data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.Then("there will be no DebugView Settle messages shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-07 - Manual Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-SET-07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "No Change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        public virtual void SET_07_ManualCalibration_NoChange_Positive()
        {
            this.SET_07_ManualCalibration("Positive", "Resolution", "Positive", "Resolution", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-07 - Manual Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-SET-07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "No Change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        public virtual void SET_07_ManualCalibration_NoChange_Negative()
        {
            this.SET_07_ManualCalibration("Negative", "Sensitivity", "Negative", "Sensitivity", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-07 - Manual Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-SET-07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        public virtual void SET_07_ManualCalibration_ChangeInPolarity_Positive()
        {
            this.SET_07_ManualCalibration("Positive", "Resolution", "Negative", "Resolution", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-07 - Manual Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-SET-07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        public virtual void SET_07_ManualCalibration_ChangeInPolarity_Negative()
        {
            this.SET_07_ManualCalibration("Negative", "Sensitivity", "Positive", "Sensitivity", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-07 - Manual Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-SET-07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Mode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        public virtual void SET_07_ManualCalibration_ChangeInMode_Positive()
        {
            this.SET_07_ManualCalibration("Positive", "Sensitivity", "Positive", "Resolution", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-07 - Manual Calibration")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-SET-07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Mode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Calibration Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        public virtual void SET_07_ManualCalibration_ChangeInMode_Negative()
        {
            this.SET_07_ManualCalibration("Negative", "Resolution", "Negative", "Sensitivity", ((string[])(null)));
        }
        
        public virtual void SET_08_MinimumSettleTime_SwitchingModes(string initialPolarity, string initialMode, string switchedToMode, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-08 - Minimum Settle Time - Switching Modes", exampleTags);
#line 214
this.ScenarioSetup(scenarioInfo);
#line 215
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Polarity",
                        "Mode",
                        "Flight Tube"});
            table4.AddRow(new string[] {
                        "Positive",
                        "Resolution",
                        "7.00"});
            table4.AddRow(new string[] {
                        "Positive",
                        "Sensitivity",
                        "9.00"});
            table4.AddRow(new string[] {
                        "Negative",
                        "Resolution",
                        "7.00"});
            table4.AddRow(new string[] {
                        "Negative",
                        "Sensitivity",
                        "9.00"});
#line 216
  testRunner.And("that for each Polarity and Mode, the Flight Tube (Tof Voltage) instrument setting" +
                    " is as follows", ((string)(null)), table4, "And ");
#line 222
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
  testRunner.And(string.Format("the mode is {0} and the polarity is {1}", initialMode, initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.When(string.Format("the mode is switched to {0}", switchedToMode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 227
 testRunner.Then("the time between DebugView Tof Voltage Settle started and finished messages, is a" +
                    "t least \'3\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-08 - Minimum Settle Time - Switching Modes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Switched to Mode", "Sensitivity")]
        public virtual void SET_08_MinimumSettleTime_SwitchingModes_Variant0()
        {
            this.SET_08_MinimumSettleTime_SwitchingModes("Positive", "Resolution", "Sensitivity", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-08 - Minimum Settle Time - Switching Modes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Switched to Mode", "Resolution")]
        public virtual void SET_08_MinimumSettleTime_SwitchingModes_Variant1()
        {
            this.SET_08_MinimumSettleTime_SwitchingModes("Positive", "Sensitivity", "Resolution", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-08 - Minimum Settle Time - Switching Modes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Switched to Mode", "Sensitivity")]
        public virtual void SET_08_MinimumSettleTime_SwitchingModes_Variant2()
        {
            this.SET_08_MinimumSettleTime_SwitchingModes("Negative", "Resolution", "Sensitivity", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-08 - Minimum Settle Time - Switching Modes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Switched to Mode", "Resolution")]
        public virtual void SET_08_MinimumSettleTime_SwitchingModes_Variant3()
        {
            this.SET_08_MinimumSettleTime_SwitchingModes("Negative", "Sensitivity", "Resolution", ((string[])(null)));
        }
        
        public virtual void SET_09_NoSettlingClosingRe_OpeningQuartzBrowser(string status, string initialPolarity, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-09 - No Settling Closing / Re-opening Quartz Browser", exampleTags);
#line 240
this.ScenarioSetup(scenarioInfo);
#line 241
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 242
  testRunner.And(string.Format("the instrument is in \'{0}\' mode", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
  testRunner.And(string.Format("the polarity is {0}", initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.When("the Quartz browser is \'Closed\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 247
  testRunner.And("the Quartz browser is \'Re-opened\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.Then("there will be no DebugView Settle messages shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-09 - No Settling Closing / Re-opening Quartz Browser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Operate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Operate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        public virtual void SET_09_NoSettlingClosingRe_OpeningQuartzBrowser_Operate_Variant0()
        {
            this.SET_09_NoSettlingClosingRe_OpeningQuartzBrowser("Operate", "Positive", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-09 - No Settling Closing / Re-opening Quartz Browser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Operate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Operate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        public virtual void SET_09_NoSettlingClosingRe_OpeningQuartzBrowser_Operate_Variant1()
        {
            this.SET_09_NoSettlingClosingRe_OpeningQuartzBrowser("Operate", "Negative", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-09 - No Settling Closing / Re-opening Quartz Browser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Source Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Source Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        public virtual void SET_09_NoSettlingClosingRe_OpeningQuartzBrowser_SourceStandby_Variant0()
        {
            this.SET_09_NoSettlingClosingRe_OpeningQuartzBrowser("Source Standby", "Positive", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-09 - No Settling Closing / Re-opening Quartz Browser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Source Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Source Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        public virtual void SET_09_NoSettlingClosingRe_OpeningQuartzBrowser_SourceStandby_Variant1()
        {
            this.SET_09_NoSettlingClosingRe_OpeningQuartzBrowser("Source Standby", "Negative", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-09 - No Settling Closing / Re-opening Quartz Browser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        public virtual void SET_09_NoSettlingClosingRe_OpeningQuartzBrowser_Standby_Variant0()
        {
            this.SET_09_NoSettlingClosingRe_OpeningQuartzBrowser("Standby", "Positive", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-09 - No Settling Closing / Re-opening Quartz Browser")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Status", "Standby")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        public virtual void SET_09_NoSettlingClosingRe_OpeningQuartzBrowser_Standby_Variant1()
        {
            this.SET_09_NoSettlingClosingRe_OpeningQuartzBrowser("Standby", "Negative", ((string[])(null)));
        }
        
        public virtual void SET_10A_AcquisitionStartPreventedPart1(string initialPolarity, string initialMode, string methodPolarity, string methodMode, string startedSettleMessage, string finishedSettleMessage, string minimumDelay, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cleanup-FullReconnect"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-10a - Acquisition Start Prevented (Part 1)", @__tags);
#line 267
this.ScenarioSetup(scenarioInfo);
#line 268
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Polarity",
                        "Mode",
                        "Flight Tube"});
            table5.AddRow(new string[] {
                        "Positive",
                        "Resolution",
                        "7.00"});
            table5.AddRow(new string[] {
                        "Positive",
                        "Sensitivity",
                        "9.00"});
            table5.AddRow(new string[] {
                        "Negative",
                        "Resolution",
                        "7.00"});
            table5.AddRow(new string[] {
                        "Negative",
                        "Sensitivity",
                        "9.00"});
#line 269
  testRunner.And("that for each Polarity and Mode, the Flight Tube (Tof Voltage) instrument setting" +
                    " is as follows", ((string)(null)), table5, "And ");
#line 275
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 276
  testRunner.And(string.Format("the mode is {0} and the polarity is {1}", initialMode, initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 278
  testRunner.And("the DebugView tool is opened listening for Settle and Method Runner messages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.When(string.Format("an attempt is made to initiate the Acquisition process with \'{0}\' and \'{1}\'", methodPolarity, methodMode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 280
 testRunner.Then(string.Format("the Acquisition is not started, until both DebugView \'{0}\' and \'{1}\' are shown (i" +
                        "f appropriate)", startedSettleMessage, finishedSettleMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 281
  testRunner.And(string.Format("there will be a {0} between the settle messages", minimumDelay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10a - Acquisition Start Prevented (Part 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "No Change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "N/A (No Delay)")]
        public virtual void SET_10A_AcquisitionStartPreventedPart1_NoChange_Positive()
        {
            this.SET_10A_AcquisitionStartPreventedPart1("Positive", "Resolution", "Positive", "Resolution", "N/A (No Message)", "N/A (No Message)", "N/A (No Delay)", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10a - Acquisition Start Prevented (Part 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "No Change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "N/A (No Message)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "N/A (No Delay)")]
        public virtual void SET_10A_AcquisitionStartPreventedPart1_NoChange_Negative()
        {
            this.SET_10A_AcquisitionStartPreventedPart1("Negative", "Resolution", "Negative", "Resolution", "N/A (No Message)", "N/A (No Message)", "N/A (No Delay)", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10a - Acquisition Start Prevented (Part 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_10A_AcquisitionStartPreventedPart1_ChangeInPolarity_Positive()
        {
            this.SET_10A_AcquisitionStartPreventedPart1("Positive", "Resolution", "Negative", "Resolution", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10a - Acquisition Start Prevented (Part 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_10A_AcquisitionStartPreventedPart1_ChangeInPolarity_Negative()
        {
            this.SET_10A_AcquisitionStartPreventedPart1("Negative", "Sensitivity", "Positive", "Sensitivity", "Settle started on: Polarity", "Settle finished on: Polarity", "18 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10a - Acquisition Start Prevented (Part 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Mode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "3 seconds")]
        public virtual void SET_10A_AcquisitionStartPreventedPart1_ChangeInMode_Positive()
        {
            this.SET_10A_AcquisitionStartPreventedPart1("Positive", "Resolution", "Positive", "Sensitivity", "Settle started on: Tof Voltage", "Settle finished on: Tof Voltage", "3 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10a - Acquisition Start Prevented (Part 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Change in Mode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Started Settle Message", "Settle started on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Finished Settle Message", "Settle finished on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "3 seconds")]
        public virtual void SET_10A_AcquisitionStartPreventedPart1_ChangeInMode_Negative()
        {
            this.SET_10A_AcquisitionStartPreventedPart1("Negative", "Sensitivity", "Negative", "Resolution", "Settle started on: Tof Voltage", "Settle finished on: Tof Voltage", "3 seconds", ((string[])(null)));
        }
        
        public virtual void SET_10B_AcquisitionStartPreventedPart2(string initialPolarity, string initialMode, string methodPolarity, string methodMode, string settleStartedOnMessages, string settleFinishedOnMessages, string minimumDelay, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cleanup-FullReconnect"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-10b - Acquisition Start Prevented (Part 2)", @__tags);
#line 300
this.ScenarioSetup(scenarioInfo);
#line 301
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Polarity",
                        "Mode",
                        "Flight Tube"});
            table6.AddRow(new string[] {
                        "Positive",
                        "Resolution",
                        "7.00"});
            table6.AddRow(new string[] {
                        "Positive",
                        "Sensitivity",
                        "9.00"});
            table6.AddRow(new string[] {
                        "Negative",
                        "Resolution",
                        "7.00"});
            table6.AddRow(new string[] {
                        "Negative",
                        "Sensitivity",
                        "9.00"});
#line 302
  testRunner.And("that for each Polarity and Mode, the Flight Tube (Tof Voltage) instrument setting" +
                    " is as follows", ((string)(null)), table6, "And ");
#line 308
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
  testRunner.And(string.Format("the mode is {0} and the polarity is {1}", initialMode, initialPolarity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
  testRunner.And("I wait \'20\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
  testRunner.And("the DebugView tool is opened listening for Settle and Method Runner messages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
 testRunner.When(string.Format("an attempt is made to initiate the Acquisition process with \'{0}\' and \'{1}\'", methodPolarity, methodMode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 313
 testRunner.Then(string.Format("the Acquisition is not started, until DebugView \'{0}\' and \'{1}\' are shown", settleStartedOnMessages, settleFinishedOnMessages), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 314
  testRunner.And(string.Format("there will be a {0} between the first and last settle messages", minimumDelay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10b - Acquisition Start Prevented (Part 2)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Both Polarity and Mode Change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started on Messages", "Tof Voltage and Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished on Messages", "Tof Voltage and Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_10B_AcquisitionStartPreventedPart2_BothPolarityAndModeChange_Positive()
        {
            this.SET_10B_AcquisitionStartPreventedPart2("Positive", "Sensitivity", "Negative", "Resolution", "Tof Voltage and Polarity", "Tof Voltage and Polarity", "18 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-10b - Acquisition Start Prevented (Part 2)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("cleanup-FullReconnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Both Polarity and Mode Change")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Polarity", "Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Mode", "Resolution")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Polarity", "Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method Mode", "Sensitivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started on Messages", "Tof Voltage and Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished on Messages", "Tof Voltage and Polarity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "18 seconds")]
        public virtual void SET_10B_AcquisitionStartPreventedPart2_BothPolarityAndModeChange_Negative()
        {
            this.SET_10B_AcquisitionStartPreventedPart2("Negative", "Resolution", "Positive", "Sensitivity", "Tof Voltage and Polarity", "Tof Voltage and Polarity", "18 seconds", ((string[])(null)));
        }
        
        public virtual void SET_11_ManuallyChangingFlightTubeVoltages(string initialValue, string newValue, string settleStartedMessage, string settleFinishedMessage, string minimumDelay, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SET-11 - Manually Changing Flight Tube Voltages", exampleTags);
#line 323
this.ScenarioSetup(scenarioInfo);
#line 324
 testRunner.Given("the browser is opened on the Tune page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 325
  testRunner.And("the instrument is in \'Operate\' mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
  testRunner.And(string.Format("the Flight Tube voltage is set to {0}", initialValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
  testRunner.And("I wait \'25\' seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
  testRunner.And("the DebugView tool is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
 testRunner.When(string.Format("the Flight Tube voltage is set to {0}", newValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 330
 testRunner.Then(string.Format("DebugView {0} and {1} are shown", settleStartedMessage, settleFinishedMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 331
  testRunner.And(string.Format("there will be a {0} between the settle messages", minimumDelay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-11 - Manually Changing Flight Tube Voltages")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Value", "5.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Value", "4.50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started Message", "N/A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished Message", "N/A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "N/A")]
        public virtual void SET_11_ManuallyChangingFlightTubeVoltages_Variant0()
        {
            this.SET_11_ManuallyChangingFlightTubeVoltages("5.00", "4.50", "N/A", "N/A", "N/A", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-11 - Manually Changing Flight Tube Voltages")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Value", "5.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Value", "5.50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started Message", "N/A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished Message", "N/A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "N/A")]
        public virtual void SET_11_ManuallyChangingFlightTubeVoltages_Variant1()
        {
            this.SET_11_ManuallyChangingFlightTubeVoltages("5.00", "5.50", "N/A", "N/A", "N/A", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-11 - Manually Changing Flight Tube Voltages")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Value", "5.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Value", "4.40")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started Message", "Settle started on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished Message", "Settle finished on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "3 seconds")]
        public virtual void SET_11_ManuallyChangingFlightTubeVoltages_Variant2()
        {
            this.SET_11_ManuallyChangingFlightTubeVoltages("5.00", "4.40", "Settle started on: Tof Voltage", "Settle finished on: Tof Voltage", "3 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-11 - Manually Changing Flight Tube Voltages")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Value", "5.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Value", "5.60")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started Message", "Settle started on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished Message", "Settle finished on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "3 seconds")]
        public virtual void SET_11_ManuallyChangingFlightTubeVoltages_Variant3()
        {
            this.SET_11_ManuallyChangingFlightTubeVoltages("5.00", "5.60", "Settle started on: Tof Voltage", "Settle finished on: Tof Voltage", "3 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-11 - Manually Changing Flight Tube Voltages")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Value", "1.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Value", "10.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started Message", "Settle started on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished Message", "Settle finished on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "3 seconds")]
        public virtual void SET_11_ManuallyChangingFlightTubeVoltages_Variant4()
        {
            this.SET_11_ManuallyChangingFlightTubeVoltages("1.00", "10.00", "Settle started on: Tof Voltage", "Settle finished on: Tof Voltage", "3 seconds", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SET-11 - Manually Changing Flight Tube Voltages")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Obsolete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Settling")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial Value", "10.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Value", "1.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Started Message", "Settle started on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Settle Finished Message", "Settle finished on: Tof Voltage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Minimum Delay", "3 seconds")]
        public virtual void SET_11_ManuallyChangingFlightTubeVoltages_Variant5()
        {
            this.SET_11_ManuallyChangingFlightTubeVoltages("10.00", "1.00", "Settle started on: Tof Voltage", "Settle finished on: Tof Voltage", "3 seconds", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
