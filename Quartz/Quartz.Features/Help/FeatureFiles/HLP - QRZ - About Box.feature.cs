// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Quartz.Features.General.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AboutBoxSoftwareInformationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HLP - QRZ - About Box.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "About Box software information", @"In order to access relevant and accurate software version information from the Quartz top level, I want to be able to access a modal dialog box 
that displays the credits and revision information of the Quartz software, product name and the installed version and the various application 
names with their respective versions and company and copyright information", ProgrammingLanguage.CSharp, new string[] {
                        "General",
                        "AboutBoxInfo"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "About Box software information")))
            {
                Quartz.Features.General.FeatureFiles.AboutBoxSoftwareInformationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-01 - About Box availability")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        public virtual void HLP_QRZ_01_AboutBoxAvailability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-01 - About Box availability", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.When("Quartz top level page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("access to the \'About Box\' is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-02 - Versioning - all modules installed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Defect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CR_Build_and_version_only_appear_in_MSI_installer")]
        public virtual void HLP_QRZ_02_Versioning_AllModulesInstalled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-02 - Versioning - all modules installed", new string[] {
                        "Defect",
                        "CR_Build_and_version_only_appear_in_MSI_installer"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("that Dev Console, WRENS,AMITS and Man Test are installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.When("the About Box is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "About Quartz",
                        "Format"});
            table1.AddRow(new string[] {
                        "Quartz",
                        "Build, Revision,Date"});
            table1.AddRow(new string[] {
                        "Typhoon",
                        "Build, Revision,Date"});
#line 40
 testRunner.Then("the content of the About Quartz is available with Format", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-03 - Versioning - subset of modules installed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Defect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CR_Build_and_version_only_appear_in_MSI_installer")]
        public virtual void HLP_QRZ_03_Versioning_SubsetOfModulesInstalled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-03 - Versioning - subset of modules installed", new string[] {
                        "Defect",
                        "CR_Build_and_version_only_appear_in_MSI_installer"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("that Dev Console, WRENS,AMITS and Man Test are not installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.When("the About Box is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "About Quartz",
                        "Format"});
            table2.AddRow(new string[] {
                        "Quartz",
                        "Build, Revision,Date"});
            table2.AddRow(new string[] {
                        "Typhoon",
                        "Build, Revision,Date"});
            table2.AddRow(new string[] {
                        "Dev Console",
                        ""});
            table2.AddRow(new string[] {
                        "WRENS",
                        ""});
            table2.AddRow(new string[] {
                        "AMITS",
                        ""});
            table2.AddRow(new string[] {
                        "Man Test",
                        ""});
#line 56
 testRunner.Then("the content of the About Quartz is available with Format", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-04 - About Box edit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void HLP_QRZ_04_AboutBoxEdit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-04 - About Box edit", new string[] {
                        "ignore"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
 testRunner.Given("that About Box is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.Then("the content can not be edited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-05 - About Box content - copyright information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        public virtual void HLP_QRZ_05_AboutBoxContent_CopyrightInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-05 - About Box content - copyright information", ((string[])(null)));
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
 testRunner.When("the About Box is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.Then("Company information and copyright information is displayed at bottom of the dialo" +
                    "g", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-06 - About Box closure OK button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        public virtual void HLP_QRZ_06_AboutBoxClosureOKButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-06 - About Box closure OK button", ((string[])(null)));
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given("that About Box is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
 testRunner.When("the \'OK\' button is pressed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("the About Box information is no longer displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-07 - About Box closure top right X")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        public virtual void HLP_QRZ_07_AboutBoxClosureTopRightX()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-07 - About Box closure top right X", ((string[])(null)));
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("that About Box is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.When("the top right \'X\' button is pressed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then("the About Box information is no longer displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("HLP-QRZ-08 - About Box closure keyboard Esc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "About Box software information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("General")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AboutBoxInfo")]
        public virtual void HLP_QRZ_08_AboutBoxClosureKeyboardEsc()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HLP-QRZ-08 - About Box closure keyboard Esc", ((string[])(null)));
#line 85
this.ScenarioSetup(scenarioInfo);
#line 86
 testRunner.Given("that About Box is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
 testRunner.When("\'Esc\' is pressed on the keyboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("the About Box information is no longer displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
