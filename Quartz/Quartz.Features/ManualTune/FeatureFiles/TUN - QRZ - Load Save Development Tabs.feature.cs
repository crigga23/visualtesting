// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Quartz.Features.ManualTune.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TUN_QRZ_LoadSaveDevelopmentTabsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TUN - QRZ - Load Save Development Tabs.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "TUN - QRZ - Load Save Development Tabs", @"In order to customise the Dev Console Tune Page
As a research scientist
I want to add and delete custom tabs containing custom controls
And I want to be able to save and load sets of these tabs
And I want to be able to clear all custom tabs to return to a default view", ProgrammingLanguage.CSharp, new string[] {
                        "ManualTune",
                        "CustomTabCleanup"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "TUN - QRZ - Load Save Development Tabs")))
            {
                Quartz.Features.ManualTune.FeatureFiles.TUN_QRZ_LoadSaveDevelopmentTabsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 42
#line 43
testRunner.Given("All custom tabs are cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01 - Adding Many Empty Tabs and renaming")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _01_AddingManyEmptyTabsAndRenaming()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Adding Many Empty Tabs and renaming", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 48
testRunner.Given("I add \'10\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
testRunner.And("I rename all custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.When("I leave and return to the \'Tune Page\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
testRunner.Then("\'10\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
testRunner.And("all custom tabs should have the correct name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02 - Adding Many Randomly Populated Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _02_AddingManyRandomlyPopulatedTabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Adding Many Randomly Populated Tabs", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 55
testRunner.Given("I add \'10\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
testRunner.And("I add multiple random custom controls", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
testRunner.When("I leave and return to the \'Tune Page\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then("\'10\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
testRunner.And("all controls should be visible and correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03 - Adding and Deleting Single Empty Tab")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _03_AddingAndDeletingSingleEmptyTab()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Adding and Deleting Single Empty Tab", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 64
testRunner.Given("I add \'1\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
testRunner.When("I delete the last \'1\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
testRunner.Then("\'0\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04 - Adding Multiple and Deleting Some Random Empty Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _04_AddingMultipleAndDeletingSomeRandomEmptyTabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Adding Multiple and Deleting Some Random Empty Tabs", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 69
testRunner.Given("I add \'10\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
testRunner.When("I delete a random \'5\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
testRunner.Then("\'5\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
testRunner.And("the correct custom tabs are visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05 - Adding and Deleting Single Populated Tab")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _05_AddingAndDeletingSinglePopulatedTab()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Adding and Deleting Single Populated Tab", ((string[])(null)));
#line 74
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 75
testRunner.Given("I add \'1\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 76
testRunner.And("I add multiple random custom controls", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
testRunner.When("I delete the last \'1\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
testRunner.Then("\'0\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("06 - Adding Multiple and Deleting Random Populated Tab")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _06_AddingMultipleAndDeletingRandomPopulatedTab()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 - Adding Multiple and Deleting Random Populated Tab", ((string[])(null)));
#line 80
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 81
testRunner.Given("I add \'10\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
testRunner.And("I add multiple random custom controls", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
testRunner.When("I delete a random \'5\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
testRunner.Then("\'5\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
testRunner.And("the correct custom tabs are visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
testRunner.And("all controls should be visible and correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("07 - Adding Multiple and Clearing Empty Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _07_AddingMultipleAndClearingEmptyTabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Adding Multiple and Clearing Empty Tabs", ((string[])(null)));
#line 90
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 91
testRunner.Given("I add \'5\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
testRunner.And("I clear custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
testRunner.Then("\'0\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("08 - Saving and Loading Multiple Empty Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _08_SavingAndLoadingMultipleEmptyTabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 - Saving and Loading Multiple Empty Tabs", ((string[])(null)));
#line 97
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 98
testRunner.Given("I add \'5\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 99
testRunner.And("I rename all custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
testRunner.And("I save custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
testRunner.And("I clear custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.When("I load custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
testRunner.Then("\'5\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
testRunner.And("the correct custom tabs are visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
testRunner.And("all custom tabs should have the correct name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("09 - Saving and Loading Multiple Populated Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _09_SavingAndLoadingMultiplePopulatedTabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Saving and Loading Multiple Populated Tabs", ((string[])(null)));
#line 107
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 108
testRunner.Given("I add \'8\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 109
testRunner.And("I rename all custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
testRunner.And("I add multiple random custom controls", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
testRunner.And("I save custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
testRunner.And("I clear custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.When("I load custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
testRunner.Then("\'8\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
testRunner.And("the correct custom tabs are visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.And("all custom tabs should have the correct name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
testRunner.And("all controls should be visible and correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("10 - Adding Multiple Renamed Populated Tabs, Clearing, Adding Multiple Renamed Po" +
            "pulated Tabs, Saving and Loading")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _10_AddingMultipleRenamedPopulatedTabsClearingAddingMultipleRenamedPopulatedTabsSavingAndLoading()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 - Adding Multiple Renamed Populated Tabs, Clearing, Adding Multiple Renamed Po" +
                    "pulated Tabs, Saving and Loading", ((string[])(null)));
#line 121
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 122
testRunner.Given("I add \'20\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
testRunner.And("I rename all custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
testRunner.And("I add multiple random custom controls", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
testRunner.And("I clear custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
testRunner.And("I add \'15\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
testRunner.And("I rename all custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
testRunner.And("I add multiple random custom controls", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
testRunner.And("I save custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
testRunner.And("I clear custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
testRunner.When("I load custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
testRunner.Then("\'15\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
testRunner.And("the correct custom tabs are visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
testRunner.And("all controls should be visible and correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
testRunner.And("all custom tabs should have the correct name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("11 - Adding Multiple Renamed Populated Tabs, Clearing, Adding Multiple Renamed Po" +
            "pulated Tabs, Saving and Loading")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TUN - QRZ - Load Save Development Tabs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ManualTune")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomTabCleanup")]
        public virtual void _11_AddingMultipleRenamedPopulatedTabsClearingAddingMultipleRenamedPopulatedTabsSavingAndLoading()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11 - Adding Multiple Renamed Populated Tabs, Clearing, Adding Multiple Renamed Po" +
                    "pulated Tabs, Saving and Loading", ((string[])(null)));
#line 139
this.ScenarioSetup(scenarioInfo);
#line 42
this.FeatureBackground();
#line 140
testRunner.Given("I add \'10\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
testRunner.And("I rename all custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
testRunner.And("I add multiple random custom controls", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
testRunner.And("I save custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
testRunner.And("I add \'7\' custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
testRunner.When("I load custom tabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.Then("\'10\' custom tabs should be visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
testRunner.And("the correct custom tabs are visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
testRunner.And("all controls should be visible and correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
testRunner.And("all custom tabs should have the correct name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
