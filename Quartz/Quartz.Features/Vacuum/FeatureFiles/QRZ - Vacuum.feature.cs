// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Quartz.Features.Vacuum.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
    public partial class VacuumFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QRZ - Vacuum.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Vacuum", "In order to check / change the \'Vacuum\' status\r\nI want to be able to access infor" +
                    "mation related to \'Vacuum Status\', \'Vacuum pressures\', \'Turbo Speeds\' and \'Turbo" +
                    " Operation Times\'\r\nAnd I want to be able to \'Vent\' / \'Pump down\' the instrument " +
                    "as required", ProgrammingLanguage.CSharp, new string[] {
                        "ignore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Vacuum")))
            {
                Quartz.Features.Vacuum.FeatureFiles.VacuumFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-01 - Vacuum Availability")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        public virtual void QRZ_01_VacuumAvailability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-01 - Vacuum Availability", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.And("Vacuum page is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void QRZ_02_PumpingVenting(string toggleInstrumentVacuumStatus, string newOption, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-02 - Pumping / Venting", exampleTags);
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.And("Vacuum page is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.When(string.Format("the option to \'{0}\' is selected", toggleInstrumentVacuumStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then(string.Format("a \'{0}\' will be shown", newOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-02 - Pumping / Venting")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Pump Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Toggle Instrument Vacuum Status", "Pump Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Option", "Vent Instrument")]
        public virtual void QRZ_02_PumpingVenting_PumpInstrument()
        {
            this.QRZ_02_PumpingVenting("Pump Instrument", "Vent Instrument", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-02 - Pumping / Venting")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Vent Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Toggle Instrument Vacuum Status", "Vent Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:New Option", "Pump Instrument")]
        public virtual void QRZ_02_PumpingVenting_VentInstrument()
        {
            this.QRZ_02_PumpingVenting("Vent Instrument", "Pump Instrument", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-03 - Pump Override active Warning Status")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        public virtual void QRZ_03_PumpOverrideActiveWarningStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-03 - Pump Override active Warning Status", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.And("Pump Override Switch is Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("Vacuum page is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.Then("warning panel is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
 testRunner.And("warning \'Pump override active\' will be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-04 - Pump Override not active Warning Status")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        public virtual void QRZ_04_PumpOverrideNotActiveWarningStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-04 - Pump Override not active Warning Status", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("Pump Override Switch is not active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("Vacuum page is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.Then("there will not be a warning related to the pump override switch being active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void QRZ_05_VacuumPressureGauges(string gauges, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-05 - Vacuum Pressure Gauges", exampleTags);
#line 74
this.ScenarioSetup(scenarioInfo);
#line 75
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 76
 testRunner.And("Vacuum page is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.Then("\'Pressures\' widget is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
 testRunner.And(string.Format("there will be a series of \'{0}\' gauges available", gauges), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("the pressures will be measured in \'mbar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-05 - Vacuum Pressure Gauges")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Backing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gauges", "Backing")]
        public virtual void QRZ_05_VacuumPressureGauges_Backing()
        {
            this.QRZ_05_VacuumPressureGauges("Backing", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-05 - Vacuum Pressure Gauges")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Collision Cell")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gauges", "Collision Cell")]
        public virtual void QRZ_05_VacuumPressureGauges_CollisionCell()
        {
            this.QRZ_05_VacuumPressureGauges("Collision Cell", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-05 - Vacuum Pressure Gauges")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TOF")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gauges", "TOF")]
        public virtual void QRZ_05_VacuumPressureGauges_TOF()
        {
            this.QRZ_05_VacuumPressureGauges("TOF", ((string[])(null)));
        }
        
        public virtual void QRZ_06_TurboSpeedGauges(string gauges, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-06 - Turbo Speed Gauges", exampleTags);
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
 testRunner.And("Vacuum page is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.Then("\'Turbo Speed\' widget is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
 testRunner.And(string.Format("there will be a series of \'{0}\' gauges available", gauges), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("the speeds will be measured in \'%\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-06 - Turbo Speed Gauges")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gauges", "Source")]
        public virtual void QRZ_06_TurboSpeedGauges_Source()
        {
            this.QRZ_06_TurboSpeedGauges("Source", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-06 - Turbo Speed Gauges")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Quadrupole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gauges", "Quadrupole")]
        public virtual void QRZ_06_TurboSpeedGauges_Quadrupole()
        {
            this.QRZ_06_TurboSpeedGauges("Quadrupole", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-06 - Turbo Speed Gauges")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TOF")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gauges", "TOF")]
        public virtual void QRZ_06_TurboSpeedGauges_TOF()
        {
            this.QRZ_06_TurboSpeedGauges("TOF", ((string[])(null)));
        }
        
        public virtual void QRZ_07_TurboOperationTimes(string turboOperationTimes, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-07 - Turbo Operation Times", exampleTags);
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
 testRunner.And("Vacuum page is open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.Then("\'Turbo Operation Time\' widget is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 108
 testRunner.And(string.Format("there will be a series of \'{0}\' available", turboOperationTimes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("the times will be measured in \'Hours\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.And("the time will increase in single units as the number of hours of operation increa" +
                    "ses", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-07 - Turbo Operation Times")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Turbo Operation Times", "Source")]
        public virtual void QRZ_07_TurboOperationTimes_Source()
        {
            this.QRZ_07_TurboOperationTimes("Source", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-07 - Turbo Operation Times")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Quadrupole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Turbo Operation Times", "Quadrupole")]
        public virtual void QRZ_07_TurboOperationTimes_Quadrupole()
        {
            this.QRZ_07_TurboOperationTimes("Quadrupole", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-07 - Turbo Operation Times")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TOF")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Turbo Operation Times", "TOF")]
        public virtual void QRZ_07_TurboOperationTimes_TOF()
        {
            this.QRZ_07_TurboOperationTimes("TOF", ((string[])(null)));
        }
        
        public virtual void QRZ_08_ActionChangingInstrumentVacuumStatus(string initial, string action, string intermediate, string final, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-08 - Action Changing Instrument Vacuum Status", exampleTags);
#line 122
this.ScenarioSetup(scenarioInfo);
#line 123
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
 testRunner.And("the instrument \'Pump Override Switch\' is \'Off\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
  testRunner.And(string.Format("there is an \'{0}\' instrument vacuum state", initial), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
  testRunner.And(string.Format("an \'{0}\' is attempted", action), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.Then(string.Format("there will be an \'{0}\' instrument vacuum status", intermediate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 129
  testRunner.And(string.Format("after some time there will be a \'{0}\' instrument vacuum status", final), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-08 - Action Changing Instrument Vacuum Status")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Pump")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Vented")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial", "Vented")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Action", "Pump Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intermediate", "Pumping")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Final", "Pumped")]
        public virtual void QRZ_08_ActionChangingInstrumentVacuumStatus_Pump_Vented()
        {
            this.QRZ_08_ActionChangingInstrumentVacuumStatus("Vented", "Pump Instrument", "Pumping", "Pumped", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-08 - Action Changing Instrument Vacuum Status")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Pump")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Venting")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial", "Venting")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Action", "Pump Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intermediate", "Pumping")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Final", "Pumped")]
        public virtual void QRZ_08_ActionChangingInstrumentVacuumStatus_Pump_Venting()
        {
            this.QRZ_08_ActionChangingInstrumentVacuumStatus("Venting", "Pump Instrument", "Pumping", "Pumped", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-08 - Action Changing Instrument Vacuum Status")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Vent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Pumped")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial", "Pumped")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Action", "Vent Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intermediate", "Venting")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Final", "Vented")]
        public virtual void QRZ_08_ActionChangingInstrumentVacuumStatus_Vent_Pumped()
        {
            this.QRZ_08_ActionChangingInstrumentVacuumStatus("Pumped", "Vent Instrument", "Venting", "Vented", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-08 - Action Changing Instrument Vacuum Status")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Vent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Pumping")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Initial", "Pumping")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Action", "Vent Instrument")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intermediate", "Venting")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Final", "Vented")]
        public virtual void QRZ_08_ActionChangingInstrumentVacuumStatus_Vent_Pumping()
        {
            this.QRZ_08_ActionChangingInstrumentVacuumStatus("Pumping", "Vent Instrument", "Venting", "Vented", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-09 - General - Monitoring Turbo Speed Gauges (Pumping Down)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        public virtual void QRZ_09_General_MonitoringTurboSpeedGaugesPumpingDown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-09 - General - Monitoring Turbo Speed Gauges (Pumping Down)", ((string[])(null)));
#line 146
this.ScenarioSetup(scenarioInfo);
#line 147
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
  testRunner.And("the instrument is \'Vented\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
  testRunner.And("the instrument is \'Pumped Down\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
  testRunner.And("the \'Turbo Speed Gauges\' are monitored over the period of the pumping down proces" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("all the \'Turbo Speed Gauges\' will progressively increase, from less than 2% to 10" +
                    "0% (+/- 2%)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
  testRunner.And("all the \'Turbo Speed Gauges\' gauges will move from the \'Red\' region into the \'Gre" +
                    "en\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-10 - General - Monitoring Turbo Speed Gauges (Venting)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        public virtual void QRZ_10_General_MonitoringTurboSpeedGaugesVenting()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-10 - General - Monitoring Turbo Speed Gauges (Venting)", ((string[])(null)));
#line 155
this.ScenarioSetup(scenarioInfo);
#line 156
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
  testRunner.And("the instrument is \'Pumped\' (Vacuum OK)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("the instrument \'Pump Override Switch\' is \'Off\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
  testRunner.And("the instrument is \'Vented\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
  testRunner.And("the \'Turbo Speed Gauges\' are monitored over the period of the venting process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.Then("all the \'Turbo Speed Gauges\' will progressively drop, from 100% (+/- 2%) to less " +
                    "than 2%", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
  testRunner.And("all the \'Turbo Speed Gauges\' gauges will move from the \'Green\' region into the \'R" +
                    "ed\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void QRZ_11_General_MonitoringVacuumPressureGaugesPumpingDown_BackingCollision(string vacuumPressureGauges, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-11 - General - Monitoring Vacuum Pressure Gauges (Pumping Down) - Backing / C" +
                    "ollision", exampleTags);
#line 167
this.ScenarioSetup(scenarioInfo);
#line 168
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 169
  testRunner.And("the instrument is \'Vented\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
  testRunner.And("the instrument is \'Pumped Down\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
  testRunner.And(string.Format("the \'{0}\' are monitored over the period of the pumping down process", vacuumPressureGauges), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.Then(string.Format("\'{0}\' will move from the \'Red\' region into the \'Green\' region", vacuumPressureGauges), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-11 - General - Monitoring Vacuum Pressure Gauges (Pumping Down) - Backing / C" +
            "ollision")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Backing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Vacuum Pressure Gauges", "Backing")]
        public virtual void QRZ_11_General_MonitoringVacuumPressureGaugesPumpingDown_BackingCollision_Backing()
        {
            this.QRZ_11_General_MonitoringVacuumPressureGaugesPumpingDown_BackingCollision("Backing", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-11 - General - Monitoring Vacuum Pressure Gauges (Pumping Down) - Backing / C" +
            "ollision")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Collision Cell")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Vacuum Pressure Gauges", "Collision Cell")]
        public virtual void QRZ_11_General_MonitoringVacuumPressureGaugesPumpingDown_BackingCollision_CollisionCell()
        {
            this.QRZ_11_General_MonitoringVacuumPressureGaugesPumpingDown_BackingCollision("Collision Cell", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-12 - General - Monitoring Vacuum Pressure Gauges (Pumping Down) - TOF")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        public virtual void QRZ_12_General_MonitoringVacuumPressureGaugesPumpingDown_TOF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-12 - General - Monitoring Vacuum Pressure Gauges (Pumping Down) - TOF", ((string[])(null)));
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
  testRunner.And("the instrument is \'Vented\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
  testRunner.And("the instrument is \'Pumped Down\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
  testRunner.And("after some time the \'TOF Turbo Speed Gauge\' has moved into the \'Green\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.Then("the \'TOF Pressure Gauge\' will move from the \'Red\' region into the \'Amber\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 186
  testRunner.And("will continue through the \'Yellow\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
  testRunner.And("will finally settle into the \'Green\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void QRZ_13_General_MonitoringVacuumPressureGaugesVenting_BackingCollision(string vacuumPressureGauges, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-13 - General - Monitoring Vacuum Pressure Gauges (Venting) - Backing / Collis" +
                    "ion", exampleTags);
#line 191
this.ScenarioSetup(scenarioInfo);
#line 192
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 193
  testRunner.And("the instrument is \'Pumped\' (Vacuum OK)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
  testRunner.And("the instrument \'Pump Override Switch\' is \'Off\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
  testRunner.And("the instrument is \'Vented\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
  testRunner.And(string.Format("the \'{0}\' are monitored over the period of the pumping down process", vacuumPressureGauges), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.Then(string.Format("\'{0}\' will move from the \'Green\' region into the \'Red\' region", vacuumPressureGauges), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-13 - General - Monitoring Vacuum Pressure Gauges (Venting) - Backing / Collis" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Backing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Vacuum Pressure Gauges", "Backing")]
        public virtual void QRZ_13_General_MonitoringVacuumPressureGaugesVenting_BackingCollision_Backing()
        {
            this.QRZ_13_General_MonitoringVacuumPressureGaugesVenting_BackingCollision("Backing", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-13 - General - Monitoring Vacuum Pressure Gauges (Venting) - Backing / Collis" +
            "ion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Collision Cell")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Vacuum Pressure Gauges", "Collision Cell")]
        public virtual void QRZ_13_General_MonitoringVacuumPressureGaugesVenting_BackingCollision_CollisionCell()
        {
            this.QRZ_13_General_MonitoringVacuumPressureGaugesVenting_BackingCollision("Collision Cell", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-14 - General - Monitoring Vacuum Pressure Gauges (Venting) - TOF")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        public virtual void QRZ_14_General_MonitoringVacuumPressureGaugesVenting_TOF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-14 - General - Monitoring Vacuum Pressure Gauges (Venting) - TOF", ((string[])(null)));
#line 204
this.ScenarioSetup(scenarioInfo);
#line 205
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 206
  testRunner.And("the instrument is \'Pumped\' (Vacuum OK)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
  testRunner.And("the instrument \'Pump Override Switch\' is \'Off\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 209
  testRunner.And("the instrument is \'Vented\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.Then("the \'TOF Pressure Gauge\' will move from the \'Green\' region, through the \'Yellow\' " +
                    "region, into the \'Amber\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 211
  testRunner.And("the \'TOF Pressure Gauge\' will finally move into the \'Red\' region when the \'TOF Tu" +
                    "rbo Speed Gauge\' has moved into its \'Red\' region", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void QRZ_15_ConfiguringPanelElements(string pageElement, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QRZ-15 - Configuring Panel Elements", exampleTags);
#line 218
this.ScenarioSetup(scenarioInfo);
#line 219
 testRunner.Given("that a Quartz Development Console environment is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 220
 testRunner.When("the Vacuum page is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 221
  testRunner.And(string.Format("a specific \'{0}\' is inspected", pageElement), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.Then("relevant \'details\' will become available for the selected page element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 223
  testRunner.And("the \'details\' can be configured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Vacuum pressures panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Backing pressure gauge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "Backing pressure gauge")]
        public virtual void QRZ_15_ConfiguringPanelElements_VacuumPressuresPanel_BackingPressureGauge()
        {
            this.QRZ_15_ConfiguringPanelElements("Backing pressure gauge", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Vacuum pressures panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Collision pressure gauge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "Collision pressure gauge")]
        public virtual void QRZ_15_ConfiguringPanelElements_VacuumPressuresPanel_CollisionPressureGauge()
        {
            this.QRZ_15_ConfiguringPanelElements("Collision pressure gauge", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Vacuum pressures panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TOF pressure gauge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "TOF pressure gauge")]
        public virtual void QRZ_15_ConfiguringPanelElements_VacuumPressuresPanel_TOFPressureGauge()
        {
            this.QRZ_15_ConfiguringPanelElements("TOF pressure gauge", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Turbo speeds panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source turbo speed gauge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "Source turbo speed gauge")]
        public virtual void QRZ_15_ConfiguringPanelElements_TurboSpeedsPanel_SourceTurboSpeedGauge()
        {
            this.QRZ_15_ConfiguringPanelElements("Source turbo speed gauge", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Turbo speeds panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Quadrupole turbo speed gauge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "Quadrupole turbo speed gauge")]
        public virtual void QRZ_15_ConfiguringPanelElements_TurboSpeedsPanel_QuadrupoleTurboSpeedGauge()
        {
            this.QRZ_15_ConfiguringPanelElements("Quadrupole turbo speed gauge", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Turbo speeds panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TOF turbo speed gauge")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "TOF turbo speed gauge")]
        public virtual void QRZ_15_ConfiguringPanelElements_TurboSpeedsPanel_TOFTurboSpeedGauge()
        {
            this.QRZ_15_ConfiguringPanelElements("TOF turbo speed gauge", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Turbo speeds panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source operation time")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "Source operation time")]
        public virtual void QRZ_15_ConfiguringPanelElements_TurboSpeedsPanel_SourceOperationTime()
        {
            this.QRZ_15_ConfiguringPanelElements("Source operation time", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Turbo operation time panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source turbo operation time")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "Source turbo operation time")]
        public virtual void QRZ_15_ConfiguringPanelElements_TurboOperationTimePanel_SourceTurboOperationTime()
        {
            this.QRZ_15_ConfiguringPanelElements("Source turbo operation time", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Turbo operation time panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Quadrupole turbo operation time")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "Quadrupole turbo operation time")]
        public virtual void QRZ_15_ConfiguringPanelElements_TurboOperationTimePanel_QuadrupoleTurboOperationTime()
        {
            this.QRZ_15_ConfiguringPanelElements("Quadrupole turbo operation time", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QRZ-15 - Configuring Panel Elements")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Vacuum")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("ExampleSetName", "Turbo operation time panel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TOF turbo operation time")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page Element", "TOF turbo operation time")]
        public virtual void QRZ_15_ConfiguringPanelElements_TurboOperationTimePanel_TOFTurboOperationTime()
        {
            this.QRZ_15_ConfiguringPanelElements("TOF turbo operation time", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
